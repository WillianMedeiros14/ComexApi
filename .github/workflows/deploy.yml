name: Deploy API

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: comex_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Install dotnet-ef tool
        run: dotnet tool install --global dotnet-ef

      - name: Restore dependencies for ComexAPI
        run: dotnet restore Comex.API/ComexAPI.csproj

      - name: Build ComexAPI
        run: dotnet build Comex.API/ComexAPI.csproj --configuration Release

      - name: Clean up Database
        run: |
          echo "Cleaning up database..."
          PGPASSWORD=password psql -h localhost -U postgres -d comex_test -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"

      - name: Run Tests
        env:
          DATABASE_URL_TEST: "Host=localhost;Port=5432;Database=comex_test;Username=postgres;Password=password"
        run: dotnet test ComexAPI.Integration.Test/ComexAPI.Integration.Test.csproj --configuration Release

      - name: Publish ComexAPI
        run: dotnet publish Comex.API/ComexAPI.csproj --configuration Release --output ./publish

      - name: Run Migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          echo "Running migrations..."
          dotnet tool restore
          dotnet ef database update --project Comex.API/ComexAPI.csproj --context ProdutoContext --connection "$DATABASE_URL"
