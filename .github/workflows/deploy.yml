name: Deploy API

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Install dotnet-ef tool
        run: dotnet tool install --global dotnet-ef

      - name: Restore dependencies for ComexAPI
        run: dotnet restore Comex.API/ComexAPI.csproj

      - name: Build ComexAPI
        run: dotnet build Comex.API/ComexAPI.csproj --configuration Release

      - name: Run Tests
        run: dotnet test ComexAPI.Integration.Test/ComexAPI.Integration.Test.csproj

      - name: Publish ComexAPI
        run: dotnet publish Comex.API/ComexAPI.csproj --configuration Release --output ./publish

      - name: Run Migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          echo "Running migrations..."
          dotnet tool restore
          dotnet ef database update --project Comex.API/ComexAPI.csproj --context ProdutoContext --connection "$DATABASE_URL"
      - name: Deploy to Render
        env:
            RENDER_BEARER_TOKEN: ${{ secrets.RENDER_API_KEY }}
            RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
            RESPONSE=$(curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
              -H "Authorization: Bearer $RENDER_BEARER_TOKEN" \
              -H "Content-Type: application/json" \
              -w "%{http_code}" \
              -o response.json \
              -s)
    
            if [ "$RESPONSE" -eq 201 ]; then
              echo "Deploy iniciado com sucesso!"
              cat response.json
            else
              echo "Falha ao iniciar o deploy. Código de status: $RESPONSE"
              cat response.json
              exit 1
            fi
      - name: Check deploy status
        env:
           RENDER_BEARER_TOKEN: ${{ secrets.RENDER_API_KEY }}
           RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
           DEPLOY_ID: ${{ steps.deploy.outputs.DEPLOY_ID }}
        run: |
              while true; do
                STATUS=$(curl -X GET \
                  https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys/$DEPLOY_ID \
                  -H "Authorization: Bearer $RENDER_BEARER_TOKEN" \
                  | jq -r '.status')
                echo "Deploy status: $STATUS"
                if [[ "$STATUS" == "live" ]]; then
                  echo "Deploy succeeded!"
                  break
                elif [[ "$STATUS" == "build_failed" || "$STATUS" == "update_failed" || "$STATUS" == "pre_deploy_failed" ]]; then
                  echo "Deploy failed!"
                  exit 1
                fi
                sleep 30
              done



